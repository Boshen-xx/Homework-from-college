#include<stdio.h>//简单的结构体
#include<math.h>
struct person{
	char name[10];
	int ch;
	int ma;
	int en;
	int sum;
}p[1010];
int main()
{
	int n;
	int i,j,k;
	scanf("%d",&n);
	for(i=1;i<=n;i++){
		scanf("%s%d%d%d",p[i].name,&p[i].ch,&p[i].ma,&p[i].en);
		p[i].sum=p[i].ch+p[i].ma+p[i].en;
	}
	for(i=1;i<=n;i++){
		for(j=i+1;j<=n;j++){
		    if(abs(p[i].sum-p[j].sum)<=10){
			    if(abs(p[i].ch-p[j].ch)<=5){
    				if(abs(p[i].ma-p[j].ma)<=5){
	    				if(abs(p[i].en-p[j].en)<=5){
                        for(k=0;k<=10;k++){
                            if(p[i].name[k]>p[j].name[k]){
				    		    printf("%s %s\n",p[j].name,p[i].name);
				    		    break;
                            }
                            else if(p[i].name[k]<p[j].name[k]){
                                printf("%s %s\n",p[i].name,p[j].name);
                            	break;
							}
                            }
                        }
                        else{
                            continue;
		    	    	}
		        	}
                    else{
                        continue;
	        		}
    	    	}else{
                    continue;
    			}
	    	}
            else{
                continue;
		    }
        }
	}
	return 0;
}
#include<stdio.h>//高精度A+B
#include<math.h>
#include<string.h>
char a[510],b[510];
int c[510];
int i,j,k;
int main ()
{
    gets(a);
    gets(b);
    int lena=strlen(a),lenb=strlen(b);
    if(lena>lenb){
        int temp=0;
        for(i=lena-1;i>lena-lenb-1;i--){
            c[lena-i-1]=a[i]-'0'+b[lenb-lena+i]-'0'+temp;
            if(c[lena-1-i]>9){
                temp=1;
                c[lena-1-i]%=10;
            }
            else{
                temp=0;
            }
        }
        c[lenb]=temp+a[lena-lenb-1]-'0';
        for(i=0;i<=lena-lenb-2;i++){
            printf("%c",a[i]);
        }
        for(i=lenb;i>=0;i--){
            printf("%d",c[i]);
        }
    }
    else if(lena<lenb){
        int temp=0;
        for(i=lenb-1;i>lenb-lena-1;i--){
            c[lenb-i-1]=b[i]-'0'+a[lena-lenb+i]-'0'+temp;
            if(c[lenb-i-1]>9){
                temp=1;
                c[lenb-i-1]%=10;
            }
            else{
                temp=0;
            }
        }
        c[lena]=temp+b[lenb-lena-1]-'0';
        for(i=0;i<=lenb-lena-2;i++){
            printf("%c",b[i]);
        }
        for(i=lena;i>=0;i--){
            printf("%d",c[i]);
        }
    }
    else{
        int temp=0;
        for(i=lena-1;i>=0;i--){
            c[lena-1-i]=a[i]-'0'+b[i]-'0'+temp;
            if(c[lena-1-i]>9){
                temp=1;
                c[lena-1-i]%=10;
            }
            else{
                temp=0;
            }
        }
        if(temp==1){
            printf("1");
        }
        for(i=lena-1;i>=0;i--){
            printf("%d",c[i]);
        }
    }
    return 0;
}

#include<stdio.h>//蛇形填数+对矩阵转
int main()
{
	int n,m;
	scanf("%d%d",&n,&m);
	int a[n+2][n+2],i,j,k,o,cnt=1;
	for(i=1;i<=n;i++){
		for(j=1;j<=n;j++){
			a[i][j]=0;
		}
	}
	i=1;
	j=1;
	while(cnt<=n*n){
		while(j<=n&&a[i][j]==0){
			a[i][j]=cnt;
			cnt++;j++;
		}
		while(i+1<=n&&a[i+1][j-1]==0){
			a[i+1][j-1]=cnt;
			cnt++;i++;
		}
		while(j>=3&&a[i][j-2]==0){
			a[i][j-2]=cnt;
			cnt++;j--;
		}
		while(i>2&&a[i-1][j-1]==0){
			a[i-1][j-1]=cnt;
			cnt++;i--;
		}
	}
	while(m--){
		int x,y,r,z;
		scanf("%d%d%d%d",&x,&y,&r,&z);
		if(z==0){
			for(i=1;i<=r;i++){
				for(j=0;j<=r;j++){
					int t;
					t=a[x+i][y+j];a[x+i][y+j]=a[x+j][y-i];a[x+j][y-i]=t;
					t=a[x+i][y+j];a[x+i][y+j]=a[x-i][y-j];a[x-i][y-j]=t;
					t=a[x+i][y+j];a[x+i][y+j]=a[x-j][y+i];a[x-j][y+i]=t;
				}
			}
		}
		if(z==1){
			for(i=1;i<=r;i++){
				for(j=0;j<=r;j++){
					int t;
					t=a[x+i][y+j];a[x+i][y+j]=a[x-j][y+i];a[x-j][y+i]=t;
					t=a[x+i][y+j];a[x+i][y+j]=a[x-i][y-j];a[x-i][y-j]=t;
					t=a[x+i][y+j];a[x+i][y+j]=a[x+j][y-i];a[x+j][y-i]=t;
				}
			}
		}
	}
	for(i=1;i<=n;i++){
		for(j=1;j<=n;j++){
			printf("%d ",a[i][j]);
		}
		printf("\n");
	}
	return 0;
}
#include<stdio.h>//DF
int n;
int cnt;
int a[4][40];
int b[18];
void dfs(int t){
    if(t>n){
        if(cnt<3){
            for(int k=1;k<=n;k++){
                printf("%d ",b[k]);
            }
            printf("\n");
        }
        cnt++;
        return;
    }
    else{
        for(int j=1;j<=n;j++){
            if(a[1][j]==0&&a[2][t+j]==0&&a[3][t-j+n]==0){
                a[1][j]=1;//记录列的
                a[2][t+j]=1;//记录反对角线
                a[3][t-j+n]=1;//记录对角线
                b[t]=j;
                dfs(t+1);
                a[1][j]=0;
                a[2][t+j]=0;
                a[3][t-j+n]=0;
                b[t]=0;
            }
        }
    }
}
int main()
{
    scanf("%d",&n);
    dfs(1);
    printf("%d",cnt);
    return 0;
}

/**题目例子分析：需要n个数组表示机器里工件的进度：a1、m2、...an，读入后创建 
***需要一个s[2*m+1]数组储存安排顺序。读入，还需要一个cnt[m+1] 
***一行一行读入，需要二维数组记录工作顺序。b[n+1][2]
***需要二维数组c[n+1][2]来储存相应机器上工作时长 
***读入数据后，循环s的长度次，分析第i次 
***安排在有空位的前一次工序后的第一个位置往后，占据相应时间
***注意：：b是表示工序的，所以横向用b纵向用k
**/
#include<stdio.h>
int n,m,i,k,t,x;
int cnt[21];//记录如果cnt[s[i]]==1就是出现过  
int s[450];//记录安排顺序 
int a[30];//第i个工件的最后时间 
int con[30][600];
int b[30][30];//第i个工件的工序，123或213... 
int c[30][30];//第i个工件的工序的相应工序时长 
int main()
{
	scanf("%d%d",&n,&m);
	for(i=1;i<=n*m;++i)
		scanf("%d",&s[i]);
	for(i=1;i<=m;++i)
		for(k=1;k<=n;++k)
			scanf("%d",&b[i][k]);
	for(i=1;i<=m;++i)
		for(k=1;k<=n;++k)
			scanf("%d",&c[i][k]);
	for(i=1;i<=n*m;++i){
		cnt[s[i]]++;
		for(k=a[s[i]]+1;;++k){
			if(con[b[s[i]][cnt[s[i]]]][k]==0)//我终于懂了，在工序里面的次序
				x++;
			else
				x=0;
			if(x==c[s[i]][cnt[s[i]]]){
				a[s[i]]=k;
				for(t=k-x+1;t<=k;t++)
					con[b[s[i]][cnt[s[i]]]][t]=1;
				x=0;
				break;
			}
		}
	}
	int max=a[1];
	for(i=2;i<=m;++i)
		if(a[i]>=max)
			max=a[i];
	printf("%d",max);		
	return 0;			
}
